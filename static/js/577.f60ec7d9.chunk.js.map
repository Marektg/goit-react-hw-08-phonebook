{"version":3,"file":"static/js/577.f60ec7d9.chunk.js","mappings":"qSASMA,EAAUC,EAAAA,GAAAA,QAAH,qJAUPC,EAAWD,EAAAA,GAAAA,IAAH,wFAMRE,EAAWF,EAAAA,GAAAA,MAAF,4KA0Ef,UA/Dc,WACV,OAAgBG,EAAAA,EAAAA,MAATC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAa,mCAAG,WAAMC,GAAN,sFAClBA,EAAEC,iBACIC,EAAOF,EAAEG,OACTC,EAAQF,EAAKE,MAAMC,MACnBC,EAAWJ,EAAKI,SAASD,MAEzBE,EAAc,CAAEH,MAAAA,EAAOE,SAAAA,GANX,SAOZZ,EAAMa,GACPC,SACAC,MAAK,YAAuC,IAApCC,EAAmC,EAAnCA,MAAmC,IAA5BC,KAAQP,EAAoB,EAApBA,MAAOQ,EAAa,EAAbA,KAC3BC,aAAaC,QAAQ,QAASC,KAAKC,UAAUN,IACzCA,GACAf,GAASsB,EAAAA,EAAAA,IAAQ,CAAEb,MAAAA,EAAOQ,KAAAA,IAEjC,IACAM,OAAM,WACHC,MAAM,8DACT,IAjBa,wBAmBEC,EAAAA,EAAAA,GAAoB,SAnBtB,eAoBJC,KADRX,EAnBY,4EAwBZf,GAAS2B,EAAAA,EAAAA,IAASZ,IAxBN,yBAyBZb,EAAS,aAzBG,QA0BlBK,EAAKqB,QA1Ba,4CAAH,sDA6BnB,OACI,UAAClC,EAAD,YAEQ,mCACA,kBAAMmC,SAAUzB,EAAhB,WACI,SAACR,EAAD,WACA,UAACC,EAAD,qBAEQ,kBAAOiC,KAAK,QAAQb,KAAK,QAAQc,aAAa,QAAQC,UAAQ,UAGtE,SAACpC,EAAD,WACA,UAACC,EAAD,uBAEQ,kBACIiC,KAAK,WACLb,KAAK,WACLc,aAAa,mBACbC,UAAQ,UAIpB,mBAAQF,KAAK,SAAb,yBAKnB,C","sources":["pages/login.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addToken } from 'redux/tokenSlice';\nimport { addUser } from 'redux/userSlice';\nimport { useLoginMutation } from 'services/phonebookApi';\nimport getFromLocalStorage from 'utilites/getFromLocalStore';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\nwidth: 60%;\nmargin-left:20%;\npadding: 40px;\ndisplay: block;\nborder: 10px solid #eac748;\n  background-color: #eceda0;\n\n`;\n\nconst FormCell = styled.div`\npadding:5px;\ndisplay: flex;\n  justify-content: flex-start;\n  `;\n\nconst StylLabel= styled.label`\n    margin-left: 15%;\n    display: grid;\ngrid-template-columns: 30% 70%;\ngrid-gap:20px;\n& input {\n    width: 300px;\n    margin-left:10px;\n}\n`;\n\nconst Login = () => {\n    const [login] = useLoginMutation();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const submitHandler = async e => {\n        e.preventDefault();\n        const form = e.target;\n        const email = form.email.value;\n        const password = form.password.value;\n\n        const credentials = { email, password };\n        await login(credentials)\n            .unwrap()\n            .then(({ token, user: { email, name } }) => {\n                localStorage.setItem(\"token\", JSON.stringify(token));\n                if (token) {\n                    dispatch(addUser({ email, name }));\n                }\n            })\n            .catch(() => {\n                alert('The given data is incorrect. Check your email and password.');\n            });\n\n        const token = await getFromLocalStorage(\"token\")\n        if (token === undefined) {\n            return;\n        }\n\n        await dispatch(addToken(token));\n        await navigate('/contacts');\n        form.reset();\n    };\n\n    return (\n        <Wrapper>\n            \n                <h2>Login</h2>\n                <form onSubmit={submitHandler}>\n                    <FormCell>\n                    <StylLabel>\n                            E-mail\n                            <input type=\"email\" name=\"email\" autoComplete=\"email\" required />\n                    </StylLabel>\n                    </FormCell>\n                    <FormCell>\n                    <StylLabel>\n                            Password\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                autoComplete=\"current-password\"\n                                required\n                            />\n                    </StylLabel>\n                    </FormCell>\n                    <button type=\"submit\">Log in</button>\n                </form>\n            \n        </Wrapper>\n    );\n};\n\nexport default Login;"],"names":["Wrapper","styled","FormCell","StylLabel","useLoginMutation","login","dispatch","useDispatch","navigate","useNavigate","submitHandler","e","preventDefault","form","target","email","value","password","credentials","unwrap","then","token","user","name","localStorage","setItem","JSON","stringify","addUser","catch","alert","getFromLocalStorage","undefined","addToken","reset","onSubmit","type","autoComplete","required"],"sourceRoot":""}